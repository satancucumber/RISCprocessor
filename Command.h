#include <cstdint>
#include <bitset>
#include <list>

struct Command {
    int OC : 6;  // 6 бит для OC (биты 31-26)
    int R0 : 5;  // 5 бит для R0 (биты 25-21)
    int R1 : 5;  // 5 бит для R1 (биты 20-16)
    int R2 : 16; // 16 бит для R2 (биты 15-0), но будет использоваться по условию

    // Конструктор для инициализации
    Command(int oc, int r0, int r1 = 0, int r2 = 0) : OC(oc), R0(r0), R1(r1), R2(r2) {
        if (r2 == 0) {
            R1 = r1; // Если R2 не задан, используем R1 как есть
            R2 = 0;  // Убедимся, что R2 равен 0
        }
        if (r1 == 0 && r2 == 0) {
            R0 = r0; // Если R1 и R2 не заданы, используем R0 как есть
            R1 = 0;  // Убедимся, что R1 равен 0
            R2 = 0;  // Убедимся, что R2 равен 0
        }
    }
    
    // Метод для получения значения структуры в формате std::bitset
    std::bitset<32> getValueBitset() const {
        std::bitset<32> binary((OC << 26) | (R0 << 21) | (R1 << 16) | R2);
        return binary;
    }
    
};